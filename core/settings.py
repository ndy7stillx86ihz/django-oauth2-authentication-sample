"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

# SSL
#SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# SECURE_SSL_REDIRECT = True
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'demo',
    'authentication'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [str(BASE_DIR.joinpath('templates'))],  # <==
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

# OAuth Configuration
OAUTH_SERVER_URL: str = os.environ.get("OAUTH_SERVER_URL", "")
OAUTH_AUTHORIZATION_URI: str = OAUTH_SERVER_URL + os.environ.get('OAUTH_AUTHORIZATION_ENDPOINT', "/oauth2/authorize")
OAUTH_TOKEN_URI: str = OAUTH_SERVER_URL + os.environ.get('OAUTH_TOKEN_ENDPOINT', "/oauth2/token")
OAUTH_USERINFO_URI: str = OAUTH_SERVER_URL + os.environ.get('OAUTH_USERINFO_ENDPOINT', "/oauth2/userinfo")
OAUTH_JWKS_URI: str = OAUTH_SERVER_URL + os.environ.get('OAUTH_JWKS_ENDPOINT', "/oauth2/jwks")
OAUTH_LOGOUT_URI: str = OAUTH_SERVER_URL + os.environ.get('OAUTH_LOGOUT_ENDPOINT', "/oidc/logout")

OAUTH_CLIENT_ID: str = os.environ.get('OAUTH_CLIENT_ID', '')
OAUTH_SCOPES: list = os.environ.get('OAUTH_SCOPES', 'openid profile email').split(' ')

OAUTH_CALLBACK_URL: str = os.environ.get('OAUTH_CALLBACK_URL', 'http://localhost:8000/auth/callback')

OAUTH_VERIFY_SSL: bool = os.environ.get('OAUTH_VERIFY_SSL', 'False').lower() == 'true'

#LOGIN_URL = '/login'
